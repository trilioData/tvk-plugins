apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: tvk-preflight
spec:
  homepage: https://github.com/trilioData/tvk-plugins/blob/main/docs/preflight/README.md
  shortDescription: TVK application preflight check for k8s cluster
  version: v1.3.2
  caveats: |
    Curl and Git neeed to be installed on system for Krew index update to work properly
  platforms:
  - selector:
      matchLabels:
        os: linux
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_linux_amd64.tar.gz
    sha256: f9a69accf6cd348eb09ab9e03e729b7fd48abfc8b6f27e6a3f0294222ccd37f1
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_linux_arm64.tar.gz
    sha256: dd8548fb02277814f9b358f5a5c6379bb3b23c3b5a5735e8b4652dea917066e5
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_linux_arm.tar.gz
    sha256: ae19dc8c07ad3065f384d22a1e3e6f016d01ffeb765945cf8120809a2d5547b3
    bin: preflight
    files:
      - from: '*'
        to: .
  - selector:
      matchLabels:
        os: linux
        arch: ppc64le
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_linux_ppc64le.tar.gz
    sha256: 4fcb8dda842d8a411af29ac3e3f0b5dd22b93ab61ab85bae5007b3bd72f641a7
    bin: preflight
    files:
      - from: '*'
        to: .
  - selector:
      matchLabels:
        os: darwin
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_darwin_amd64.tar.gz
    sha256: ec83065cc38f70877057d8a25cb8e06ae050681c854f55c1eaa0e05d58f390ab
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: darwin
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_darwin_arm64.tar.gz
    sha256: 938efde892c6e6829a6d3fcb7b13cf37c65ddc623bb64a3d8d3892a9a526d7a1
    bin: preflight
    files:
    - from: '*'
      to: .

  - selector:
      matchLabels:
        os: windows
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.2/preflight_v1.3.2_windows_amd64.zip
    sha256: 9b495e3cd8f74731f7b942aae8ce2f5bde582067b798a136b24773a4d4bce98b
    bin: preflight.exe
    files:
    - from: '*'
      to: .


  description: |
    tvk-preflight is a kubectl plugin which checks whether all the pre-requisites are met before installing Triliovault
    for Kubernetes(TVK) application in a Kubernetes cluster.

    > Check available flags for preflight plugin with :-
    kubectl tvk-preflight --help

    tvk-preflight contains two subcommands:
    1. run: performs checks on system where this plugin is installed and few checks are performed on the K8s cluster where current-context of kubeconfig is pointing to. Check available flags and options for run subcommand with:-
    kubectl tvk-preflight run --help
    2. cleanup: cleans/deletes the resources created during failed preflight checks and not cleaned-up on failure. Check available flags and options for cleanup subcommand with:-
    kubectl tvk-preflight cleanup --help

    > Usage :-
    1. Perform preflight checks
    # run preflight checks
    kubectl tvk-preflight run --storage-class <storage-class-name>

    # run preflight checks with a particular volume snapshot class
    kubectl tvk-preflight run --storage-class <storage-class-name> --volume-snapshot-class <snapshot-class-name>

    # run preflight checks in a particular namespace
    kubectl tvk-preflight run --storage-class <storage-class-name> --namespace <namespace>

    # run preflight checks with a particular log level
    kubectl tvk-preflight run --storage-class <storage-class-name> --log-level <log-level>

    # cleanup the resources generated during preflight check if preflight check fails. Default is false.
    # If the preflight check is successful, then all resources are cleaned.
    kubectl tvk-preflight run --storage-class <storage-class-name> --cleanup-on-failure

    # run preflight with a particular kubeconfig file
    kubectl tvk-preflight run --storage-class <storage-class-name> --kubeconfig <kubeconfig-file-path>

    # run preflight with local registry and image pull secret
    To use image-pull-secret, local-registry flag must be specified. vice-versa is not true
    kubectl tvk-preflight run --storage-class <storage-class-name> --local-registry <local registry path> --image-pull-secret <image pull secret>

    # run preflight with a particular serviceaccount
    kubectl tvk-preflight run --storage-class <storage-class-name> --service-account-name <service account name>

    2. Perform cleanup of preflight resources
    # clean preflight resources with a particular uid
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace>

    # clean all preflight resources created till date
    kubectl tvk-preflight cleanup --namespace <namespace>

    # clean preflight resource with a specified logging level
    kubectl tvk-preflight cleanup --uid <preflight run uid> --log-level <log-level>

    # cleanup preflight resources with a particular kubeconfig file
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace> --kubeconfig <kubeconfig-file-path>
