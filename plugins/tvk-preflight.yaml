apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: tvk-preflight
spec:
  homepage: https://github.com/trilioData/tvk-plugins/blob/main/docs/preflight/README.md
  shortDescription: TVK application preflight check for k8s cluster
  version: v1.3.1
  caveats: |
    Curl and Git neeed to be installed on system for Krew index update to work properly
  platforms:
  - selector:
      matchLabels:
        os: linux
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_linux_amd64.tar.gz
    sha256: 7ee3a9d1054716843d9230269ca828ea4ed6eb0dd51a69e724d917584fbce860
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_linux_arm64.tar.gz
    sha256: 0172903917da44cbdde1b3366a70655acd906d733ac4b030d3d934d399fafc81
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_linux_arm.tar.gz
    sha256: 7f7c1578c330ceeebcd212c77ec6c8093f60435af721f1889dd0160023191ee6
    bin: preflight
    files:
      - from: '*'
        to: .
  - selector:
      matchLabels:
        os: linux
        arch: ppc64le
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_linux_ppc64le.tar.gz
    sha256: e84d7b98e2481abce54267225ceb8ad43caa64679b2f7982e2b3faefa1ba7c94
    bin: preflight
    files:
      - from: '*'
        to: .
  - selector:
      matchLabels:
        os: darwin
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_darwin_amd64.tar.gz
    sha256: 9b02090f9f9c203bd845ac6d574c458bae0a04a5628be5c00d3414e903a8aafb
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: darwin
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_darwin_arm64.tar.gz
    sha256: c0d3e2786adf37bc2c7112e269aeb44d2475ad640a48b3b5fa5593836ff4ff5b
    bin: preflight
    files:
    - from: '*'
      to: .

  - selector:
      matchLabels:
        os: windows
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.3.1/preflight_v1.3.1_windows_amd64.zip
    sha256: e04d4ab407aa4a2e3a5ee56abbb4ff011a744ee28ab5fda6ce37ff1ec97012bf
    bin: preflight.exe
    files:
    - from: '*'
      to: .

  description: |
    tvk-preflight is a kubectl plugin which checks whether all the pre-requisites are met before installing Triliovault
    for Kubernetes(TVK) application in a Kubernetes cluster.

    > Check available flags for preflight plugin with :-
    kubectl tvk-preflight --help

    tvk-preflight contains two subcommands:
    1. run: performs checks on system where this plugin is installed and few checks are performed on the K8s cluster where current-context of kubeconfig is pointing to. Check available flags and options for run subcommand with:-
    kubectl tvk-preflight run --help
    2. cleanup: cleans/deletes the resources created during failed preflight checks and not cleaned-up on failure. Check available flags and options for cleanup subcommand with:-
    kubectl tvk-preflight cleanup --help

    > Usage :-
    1. Perform preflight checks
    # run preflight checks
    kubectl tvk-preflight run --storage-class <storage-class-name>

    # run preflight checks with a particular volume snapshot class
    kubectl tvk-preflight run --storage-class <storage-class-name> --volume-snapshot-class <snapshot-class-name>

    # run preflight checks in a particular namespace
    kubectl tvk-preflight run --storage-class <storage-class-name> --namespace <namespace>

    # run preflight checks with a particular log level
    kubectl tvk-preflight run --storage-class <storage-class-name> --log-level <log-level>

    # cleanup the resources generated during preflight check if preflight check fails. Default is false.
    # If the preflight check is successful, then all resources are cleaned.
    kubectl tvk-preflight run --storage-class <storage-class-name> --cleanup-on-failure

    # run preflight with a particular kubeconfig file
    kubectl tvk-preflight run --storage-class <storage-class-name> --kubeconfig <kubeconfig-file-path>

    # run preflight with local registry and image pull secret
    To use image-pull-secret, local-registry flag must be specified. vice-versa is not true
    kubectl tvk-preflight run --storage-class <storage-class-name> --local-registry <local registry path> --image-pull-secret <image pull secret>

    # run preflight with a particular serviceaccount
    kubectl tvk-preflight run --storage-class <storage-class-name> --service-account-name <service account name>

    2. Perform cleanup of preflight resources
    # clean preflight resources with a particular uid
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace>

    # clean all preflight resources created till date
    kubectl tvk-preflight cleanup --namespace <namespace>

    # clean preflight resource with a specified logging level
    kubectl tvk-preflight cleanup --uid <preflight run uid> --log-level <log-level>

    # cleanup preflight resources with a particular kubeconfig file
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace> --kubeconfig <kubeconfig-file-path>
