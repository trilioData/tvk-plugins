apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: tvk-preflight
spec:
  homepage: https://github.com/trilioData/tvk-plugins/blob/main/docs/preflight/README.md
  shortDescription: TVK application preflight check for k8s cluster
  version: v1.2.2
  caveats: |
    Curl and Git neeed to be installed on system for Krew index update to work properly
  platforms:
  - selector:
      matchLabels:
        os: linux
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_linux_amd64.tar.gz
    sha256: 35abc6df88e60c660b14e43775bfdef7c515012ac4db6d8c0366be297a8ddcbf
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_linux_arm64.tar.gz
    sha256: 613a5e3a4d7c6e3efbc3c05fdb9e3d17aaa4e82bab3864656683f2e450cd1b71
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_linux_arm.tar.gz
    sha256: a8b8ade2e971929724dd66984462b2030346f03cf9cd82770d372ef75dcf36e6
    bin: preflight
    files:
      - from: '*'
        to: .
  - selector:
      matchLabels:
        os: darwin
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_darwin_amd64.tar.gz
    sha256: 53bad2509de33a8c818b845c9600b070688ecf21a6aa881505b670b64acc5b0c
    bin: preflight
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: darwin
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_darwin_arm64.tar.gz
    sha256: de67523eb2dde0adda980620e748950c7b37c39d518a83d2fd5be8db92358396
    bin: preflight
    files:
    - from: '*'
      to: .

  - selector:
      matchLabels:
        os: windows
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_windows_amd64.zip
    sha256: 9d813442455a0ba1678e15fed1252ce4ac2cdc25c0f231d10281b0b0db8b81b3
    bin: preflight.exe
    files:
    - from: '*'
      to: .

  # TODO: remove/comment following two selectors 'windows/arm64' & 'windows/arm' while adding it to 'plugins' dir, as these are not supported by krew as of now.
  - selector:
      matchLabels:
        os: windows
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_windows_arm64.zip
    sha256: c23e321bd7501437145f56c4383162c187e2ce6e388e1cc1d52ce94aeca1cf00
    bin: preflight.exe
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: windows
        arch: arm
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v1.2.2/preflight_v1.2.2_windows_arm.zip
    sha256: 08cf6f4e752339878924937f82a4a68f7b3d584d8df8476b239c6992320ce7c0
    bin: preflight.exe
    files:
    - from: '*'
      to: .


  description: |
    tvk-preflight is a kubectl plugin which checks whether all the pre-requisites are met before installing Triliovault
    for Kubernetes(TVK) application in a Kubernetes cluster.

    > Check available flags for preflight plugin with :-
    kubectl tvk-preflight --help

    tvk-preflight contains two subcommands:
    1. run: performs checks on system where this plugin is installed and few checks are performed on the K8s cluster where current-context of kubeconfig is pointing to. Check available flags and options for run subcommand with:-
    kubectl tvk-preflight run --help
    2. cleanup: cleans/deletes the resources created during failed preflight checks and not cleaned-up on failure. Check available flags and options for cleanup subcommand with:-
    kubectl tvk-preflight cleanup --help

    > Usage :-
    1. Perform preflight checks
    # run preflight checks
    kubectl tvk-preflight run --storage-class <storage-class-name>

    # run preflight checks with a particular volume snapshot class
    kubectl tvk-preflight run --storage-class <storage-class-name> --volume-snapshot-class <snapshot-class-name>

    # run preflight checks in a particular namespace
    kubectl tvk-preflight run --storage-class <storage-class-name> --namespace <namespace>

    # run preflight checks with a particular log level
    kubectl tvk-preflight run --storage-class <storage-class-name> --log-level <log-level>

    # cleanup the resources generated during preflight check if preflight check fails. Default is false.
    # If the preflight check is successful, then all resources are cleaned.
    kubectl tvk-preflight run --storage-class <storage-class-name> --cleanup-on-failure

    # run preflight with a particular kubeconfig file
    kubectl tvk-preflight run --storage-class <storage-class-name> --kubeconfig <kubeconfig-file-path>

    # run preflight with local registry and image pull secret
    To use image-pull-secret, local-registry flag must be specified. vice-versa is not true
    kubectl tvk-preflight run --storage-class <storage-class-name> --local-registry <local registry path> --image-pull-secret <image pull secret>

    # run preflight with a particular serviceaccount
    kubectl tvk-preflight run --storage-class <storage-class-name> --service-account-name <service account name>

    2. Perform cleanup of preflight resources
    # clean preflight resources with a particular uid
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace>

    # clean all preflight resources created till date
    kubectl tvk-preflight cleanup --namespace <namespace>

    # clean preflight resource with a specified logging level
    kubectl tvk-preflight cleanup --uid <preflight run uid> --log-level <log-level>

    # cleanup preflight resources with a particular kubeconfig file
    kubectl tvk-preflight cleanup --uid <preflight run uid> --namespace <namespace> --kubeconfig <kubeconfig-file-path>
