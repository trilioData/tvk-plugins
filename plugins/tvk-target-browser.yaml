apiVersion: krew.googlecontainertools.github.com/v1alpha2
kind: Plugin
metadata:
  name: tvk-target-browser
spec:
  homepage: https://github.com/trilioData/tvk-plugins/blob/master/docs/target-browser/README.md
  shortDescription: TVK Target Browser queries mounted target to get details of backup, backupPlan, backup metadata, backup resource-metadata, trilio-resources etc.
  version: v2.0.0-rc.1
  caveats: |
    Curl and Git neeed to be installed on system for Krew index update to work properly
  platforms:
  - selector:
      matchLabels:
        os: linux
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_linux_amd64.tar.gz
    sha256: d962e593d4e89dbc08026842bf6ef422e4dd95a54681bfdcf1ce76d4be4de763
    bin: target-browser
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_linux_arm64.tar.gz
    sha256: f202def55cdce28bfc193148ddde3837f6c87bcc12b92136cbfc48d629c72a49
    bin: target-browser
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: linux
        arch: arm
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_linux_arm.tar.gz
    sha256: b2979b8077747aef40b0fd800fbcb73b4550211f1e23f445992024036764cfe5
    bin: target-browser
    files:
    - from: '*'
      to: .

  - selector:
      matchLabels:
        os: darwin
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_darwin_amd64.tar.gz
    sha256: d5a68e116b12a0345076302698721a9b016a54ff3210e5a2e08f28ca2ac24f64
    bin: target-browser
    files:
    - from: '*'
      to: .
  - selector:
      matchLabels:
        os: darwin
        arch: arm64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_darwin_arm64.tar.gz
    sha256: 5bd8f259afb56885ba6f9d32ccf751198f4b2ae805f752138497f37756fc4113
    bin: target-browser
    files:
    - from: '*'
      to: .

  - selector:
      matchLabels:
        os: windows
        arch: amd64
    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_windows_amd64.zip
    sha256: 9faa21f762ad158fd24c93dd4a61189e4486c34f1e1461468fb01974d3662d9b
    bin: target-browser.exe
    files:
    - from: '*'
      to: .

  #  # TODO: remove/comment following two selectors 'windows/arm64' & 'windows/arm' while adding it to 'plugins' dir, as these are not supported by krew as of now.
  #  - selector:
  #      matchLabels:
  #        os: windows
  #        arch: arm64
  #    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_windows_arm64.zip
  #    sha256: 8b7f7dc1905a6407192cfcae2c2f5a306ab3ff2fc4a7315875c6ffc45fcca775
  #    bin: target-browser.exe
  #    files:
  #    - from: '*'
  #      to: .
  #  - selector:
  #      matchLabels:
  #        os: windows
  #        arch: arm
  #    uri: https://github.com/trilioData/tvk-plugins/releases/download/v2.0.0-rc.1/target-browser_v2.0.0-rc.1_windows_arm.zip
  #    sha256: 3561f1208b5311ee5c0a9cc2e44d9fd417f44662b1a2323032e25e2295fca9b4
  #    bin: target-browser.exe
  #    files:
  #    - from: '*'
  #      to: .

  description: |
    tvk-target-browser is a kubectl plugin which can query content of mounted target location to get details of backup,
    backupPlan and metadata details of backup via HTTP/HTTPS calls to target-browser server.

    > Check available commands, flags & options for tvk-target-browser plugin with :-
    kubectl tvk-target-browser --help

    > Usage :-

    # List of backupPlans
    kubectl tvk-target-browser get backupPlan --target-name <name> --target-namespace <namespace>

    # List of backupPlans using HTTPS
    kubectl tvk-target-browser get backupPlan --target-name <name> --target-namespace <namespace> --use-https --certificate-authority <certificate-path>

    # List of backups
    kubectl tvk-target-browser get backup --target-name <name> --target-namespace <namespace>

    # List of backups using HTTPS
    kubectl tvk-target-browser get backup --target-name <name> --target-namespace <namespace> --use-https --certificate-authority <certificate-path>

    # List of backups using backupPlan UID
    kubectl tvk-target-browser get backup --backup-plan-uid <uid> --target-name <name> --target-namespace <namespace>

    # Get specific backupPlan
    kubectl tvk-target-browser get backupPlan <backup-plan-uid>  --target-name <name> --target-namespace <namespace>

    # Get specific backup
    kubectl tvk-target-browser get backup <backup-uid> --target-name <name> --target-namespace <namespace>

    # Metadata of specific backup object
    kubectl tvk-target-browser get metadata --backup-uid <uid> --target-name <name> --target-namespace <namespace>

    # Metadata of specific backup and backupPlan
    kubectl tvk-target-browser get metadata --backup-uid <uid> --backup-plan-uid <uid> --target-name <name> --target-namespace <namespace>

    # Metadata of specific backup object using HTTPS
    kubectl tvk-target-browser get metadata --backup-uid <uid> --target-name <name> --target-namespace <namespace> --use-https --certificate-authority <certificate-path>

    # Resource Metadata of specific backup object
    kubectl tvk-target-browser get resource-metadata --backup-uid <uid> --target-name <name> --target-namespace <namespace> --group <group> --version <version> --kind <kind> --name <resource-name>

    # Resource Metadata of specific backup object using HTTPS
    kubectl tvk-target-browser get resource-metadata --backup-uid <uid> --target-name <name> --target-namespace <namespace> --group <group> --version <version> --kind <kind> --name <resource-name> --use-https --certificate-authority <certificate-path>

    # Resource Metadata of specific backup and backupPlan
    kubectl tvk-target-browser get resource-metadata --backup-uid <uid> --backup-plan-uid <uid> --target-name <name> --target-namespace <namespace> --group <group> --version <version> --kind <kind> --name <resource-name>

    # Trilio Resources of specific backup object
    kubectl tvk-target-browser get backup trilio-resources <backup-uid> --kinds ClusterBackupPlan,Backup,Hook --target-name <name> --target-namespace <namespace>

    # Trilio Resources of specific backup and backupPlan
    kubectl tvk-target-browser get backup trilio-resources <backup-uid> --backup-plan-uid <uid> --kinds ClusterBackupPlan,Backup,Hook --target-name <name> --target-namespace <namespace>

    # List of backups: filter by [expirationStartTime] and [expirationEndTime]
    kubectl tvk-target-browser get backup --expiration-start-time <expiration-start-time> --expiration-end-time <expiration-end-time>--target-name <name> --target-namespace <namespace>

    # List of backups: filter by [creationStartTime] and [creationEndTime]
    kubectl tvk-target-browser get backup --creation-start-time <creation-start-time> --creation-end-time <creation-end-time>--target-name <name> --target-namespace <namespace>

    # List of backupPlans: filter by [creationStartTime] and [creationEndTime]
    kubectl tvk-target-browser get backupPlan --creation-start-time <creation-start-time> --creation-end-time <creation-end-time>--target-name <name> --target-namespace <namespace>

    # List of backupPlans: filter by [tvkInstanceUID]
    kubectl tvk-target-browser get backupPlan --tvk-instance-uid <uid> --target-name <name> --target-namespace <namespace>

    # List of backupPlans: filter by [tvkInstanceName]
    kubectl tvk-target-browser get backupPlan --tvk-instance-name <name> --target-name <name> --target-namespace <namespace>

    # List of backups: filter by [tvkInstanceUID]
    kubectl tvk-target-browser get backup --tvk-instance-uid <uid> --target-name <name> --target-namespace <namespace>

    # List of backups: filter by [tvkInstanceName]
    kubectl tvk-target-browser get backup --tvk-instance-name <name> --target-name <name> --target-namespace <namespace>
